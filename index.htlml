<!DOCTYPE html>
<html>
<head>
  <title>GPS Tracker</title>
  <style>
    #map {
      width: 100%;
      height: 400px;
    }
  </style>
</head>
<body>
  <div id="map"></div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/leaflet.js"></script>
  <script src="script.js"></script>
</body>
</html>
document.addEventListener("DOMContentLoaded", function() {
  // Inicializar o mapa
  var map = L.map("map").setView([0, 0], 13);

  // Adicionar camada de mapa
  L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
    maxZoom: 18,
  }).addTo(map);

  // Obter a localização do usuário
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var lat = position.coords.latitude;
      var lon = position.coords.longitude;

      // Atualizar a posição do mapa para a localização do usuário
      map.setView([lat, lon], 13);

      // Adicionar um marcador na posição do usuário
      L.marker([lat, lon]).addTo(map).bindPopup("Você está aqui!");
    }, function(error) {
      console.log(error);
    });
  }
  });
  document.addEventListener("DOMContentLoaded", function() {
  // Obter a referência para o elemento HTML onde o tempo será exibido
  var timeElement = document.getElementById("time");

  // Função para atualizar o tempo atual
  function updateTime() {
    var currentTime = new Date();
    var hours = currentTime.getHours();
    var minutes = currentTime.getMinutes();
    var seconds = currentTime.getSeconds();

    // Formatar os valores para garantir que tenham sempre 2 dígitos
    hours = formatTime(hours);
    minutes = formatTime(minutes);
    seconds = formatTime(seconds);

    // Atualizar o elemento HTML com o tempo atual
    timeElement.innerHTML = hours + ":" + minutes + ":" + seconds;

    // Chamar a função novamente após 1 segundo para manter a atualização contínua
    setTimeout(updateTime, 1000);
  }

  // Função para formatar os valores do tempo com 2 dígitos
  function formatTime(value) {
    return value < 10 ? "0" + value : value;
  }

  // Chamar a função pela primeira vez para iniciar a atualização do tempo
  updateTime();
});
});
